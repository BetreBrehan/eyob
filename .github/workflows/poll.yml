name: Poll Order Book & Push to Google Drive (every 5 minutes)

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:

jobs:
  poll_and_upload:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Cache pip and token.pickle
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            token.pickle
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-token
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ccxt google-api-python-client google-auth-httplib2 google-auth-oauthlib

      - name: Write OAuth client credentials
        # you should store your Desktop‐type OAuth JSON here, e.g. via:
        #   GDRIVE_OAUTH_JSON: |
        #     { "installed": { … } }
        env:
          OAUTH_JSON: ${{ secrets.GDRIVE_OAUTH_JSON }}
        run: |
          echo "$OAUTH_JSON" > credentials.json

      - name: Restore token.pickle (so no prompt on every run)
        # before using this, run locally once to generate token.pickle,
        # base64‑encode it and store in GDRIVE_TOKEN_B64 secret
        env:
          TOKEN_B64: ${{ secrets.GDRIVE_TOKEN_B64 }}
        run: |
          if [ -n "$TOKEN_B64" ]; then
            echo "$TOKEN_B64" | base64 -d > token.pickle
          fi

      - name: Poll orderbook and sync with Google Drive
        env:
          GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
        run: python poll_and_sync.py

      - name: Save updated token.pickle
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: token-pickle
          path: token.pickle
